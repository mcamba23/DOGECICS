name: DOGECICS Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Unit Tests
      run: |
        pytest tests/unit/ \
          -v \
          -m unit \
          --cov=PYTHON \
          --cov-report=html:tests/reports/coverage \
          --cov-report=xml:tests/reports/coverage.xml \
          --html=tests/reports/unit-test-report.html \
          --self-contained-html
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: tests/reports/coverage/
    
    - name: Upload Test Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-report
        path: tests/reports/unit-test-report.html

  integration-tests:
    name: Integration Tests (SIT)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Integration Tests
      run: |
        pytest tests/integration/ \
          -v \
          -m integration \
          --html=tests/reports/integration-test-report.html \
          --self-contained-html
    
    - name: Upload Test Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-report
        path: tests/reports/integration-test-report.html

  e2e-tests:
    name: E2E/UAT Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install --with-deps
    
    - name: Run E2E Tests
      run: |
        pytest tests/e2e/ \
          -v \
          -m e2e \
          --html=tests/reports/e2e-test-report.html \
          --self-contained-html
    
    - name: Run BDD Tests
      run: |
        pytest tests/e2e/test_bdd_steps.py \
          -v \
          --html=tests/reports/bdd-test-report.html \
          --self-contained-html
    
    - name: Upload E2E Test Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-report
        path: tests/reports/e2e-test-report.html
    
    - name: Upload BDD Test Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bdd-test-report
        path: tests/reports/bdd-test-report.html
    
    - name: Upload Screenshots
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-screenshots
        path: tests/screenshots/

  load-tests:
    name: Load Tests (K6)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install K6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run Basic Load Test
      run: k6 run tests/load/basic-load-test.js || true
    
    - name: Run Stress Test
      run: k6 run tests/load/stress-test.js || true
    
    - name: Run Spike Test
      run: k6 run tests/load/spike-test.js || true
    
    - name: Upload Load Test Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: load-test-reports
        path: tests/reports/*-summary.json
